#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
NTP_CONF="/etc/ntp.conf"
[ -e $RESOLV_CONF ] || touch $RESOLV_CONF
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

case "$1" in
	deconfig)
		/sbin/ifconfig $interface up
		/sbin/ifconfig $interface 0.0.0.0

		# drop info from this interface
		# resolv.conf may be a symlink to /tmp/, so take care
		TMPFILE=$(mktemp)
		grep -vE "# $interface\$" $RESOLV_CONF > $TMPFILE
		cat $TMPFILE > $RESOLV_CONF
		rm -f $TMPFILE

		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -k $interface
		fi
		;;

	leasefail|nak)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -wD $interface --no-chroot
		fi
		;;

	renew|bound)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -k $interface
		fi
		# /sbin/ifconfig $interface $ip $BROADCAST $NETMASK

		# if [ -n "$router" ] ; then
		# 	echo "deleting routers"
		# 	while route del default gw 0.0.0.0 dev $interface 2> /dev/null; do
		# 		:
		# 	done

		# 	for i in $router ; do
		# 		route add default gw $i dev $interface
		# 	done
		# fi

		# drop info from this interface
		# resolv.conf may be a symlink to /tmp/, so take care
		TMPFILE=$(mktemp)
		grep -vE "# $interface\$" $RESOLV_CONF > $TMPFILE
		cat $TMPFILE > $RESOLV_CONF
		rm -f $TMPFILE

		# prefer rfc3359 domain search list (option 119) if available
		if [ -n "$search" ]; then
			search_list=$search
		elif [ -n "$domain" ]; then
			search_list=$domain
		fi

		[ -n "$search_list" ] &&
			echo "search $search_list # $interface" >> $RESOLV_CONF

		for i in $dns ; do
			echo adding dns $i
			echo "nameserver $i # $interface" >> $RESOLV_CONF
		done

		logger -t dhcp_ntp_server "[x1p] ntpsrv is [$ntpsrv]"
		if [ -z ${ntpsrv+x} ] ; then
			echo "# default ntp server list" > $NTP_CONF
			echo "server 0.pool.ntp.org iburst" >> $NTP_CONF
			echo "server 1.pool.ntp.org iburst" >> $NTP_CONF
			echo "server 2.pool.ntp.org iburst" >> $NTP_CONF
			echo "server 3.pool.ntp.org iburst" >> $NTP_CONF
			echo "" >> $NTP_CONF
		else
			echo "# these ntp servers were provided via dhcp" > $NTP_CONF
			for i in $ntpsrv ; do
				logger -t dhcp_ntp_server "[x1p] adding ntp server [$i]"
				echo "server $i iburst" >> $NTP_CONF
			done
		fi
		echo "# Allow only time queries, at a limited rate, sending KoD when in excess." >> $NTP_CONF
		echo "# Allow all local queries (IPv4, IPv6)" >> $NTP_CONF
		echo "restrict default nomodify nopeer noquery limited kod" >> $NTP_CONF
		echo "restrict 127.0.0.1" >> $NTP_CONF
		echo "restrict [::1]" >> $NTP_CONF
		/etc/init.d/S49ntp reload

		;;
esac

HOOK_DIR="$0.d"
for hook in "${HOOK_DIR}/"*; do
    [ -f "${hook}" -a -x "${hook}" ] || continue
    "${hook}" "${@}"
done

case "$1" in
        renew|bound)
                echo "type:"$1 "device:"$interface "ip:"$ip "dns:"$dns "siaddr:"$siaddr "subnet:"$subnet "domain:"$domain "router:"$router >>"/tmp/netService_dhcp_"$interface".pipe"
        ;;
esac

exit 0
